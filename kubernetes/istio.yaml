# TODO: We need to access this through minikube tunnel

# TODO: "The custom routing is not random. Repeated requests from the same origin have a stable routing" 
# So probably we want to use the user-token here, to do the routing

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: my-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"  # Accepts requests from any host

---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: my-destinationrule
spec:
  host: my-web-app-service  # TODO: Specify the destination host
  subsets:
  - name: version-1
    labels:
      version: v1
    trafficPolicy:
      loadBalancer:
        simple: ROUND_ROBIN  # Load balancing algorithm
      connectionPool:
        http:
          http1MaxPendingRequests: 100  # Maximum number of pending requests
          maxRequestsPerConnection: 5  # Maximum number of requests per connection
  - name: version-2
    labels:
      version: v2
    trafficPolicy:
      loadBalancer:
        simple: ROUND_ROBIN
      connectionPool:
        http:
          http1MaxPendingRequests: 100
          maxRequestsPerConnection: 5

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-virtualservice
spec:
  hosts:
  - my-web-app.com
  gateways:
  - my-gateway
  http:
  - route:
    - destination:
        host: my-web-app-service
        subset: version-1
        port:
          number: 8080
      weight: 90
    - destination:
        host: my-web-app-service
        subset: version-2
        port:
          number: 8080
      weight: 10